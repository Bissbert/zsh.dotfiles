export ZSH="$HOME/.oh-my-zsh"
export ZSH_CUSTOM="${ZSH_CUSTOM:-$ZSH/custom}"
export ZSH_DISABLE_COMPFIX=true

ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/zsh"
mkdir -p "$ZSH_CACHE_DIR"
export ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump-${HOST}-${ZSH_VERSION}"

if [[ -d "$HOME/.local/bin" ]]; then
  typeset -U path
  path=("$HOME/.local/bin" $path)
  export PATH
fi

HISTDB_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/histdb"
mkdir -p "$HISTDB_DIR"
export HISTDB_FILE="$HISTDB_DIR/zsh-history.db"

# Configure Pure prompt behavior (optional overrides).
# export PURE_CMD_MAX_EXEC_TIME=2
# export PURE_PROMPT_SYMBOL="❯"

# Add extra completion definitions before compinit runs.
if [[ -d "$ZSH_CUSTOM/plugins/zsh-completions/src" ]]; then
  fpath=("$ZSH_CUSTOM/plugins/zsh-completions/src" "${fpath[@]}")
fi

# Add Pure prompt functions to fpath.
PURE_THEME_DIR="${ZSH_CUSTOM:-$ZSH/custom}/themes/pure"
if [[ -d "$PURE_THEME_DIR" ]]; then
  fpath=("$PURE_THEME_DIR" "${fpath[@]}")
fi

autoload -Uz add-zsh-hook
autoload -Uz compinit
autoload -Uz promptinit

if [[ -r "$ZSH_CUSTOM/plugins/zsh-histdb/sqlite-history.zsh" ]]; then
  source "$ZSH_CUSTOM/plugins/zsh-histdb/sqlite-history.zsh"
fi

# Simple deferred loader.
typeset -gi _zsh_defer_count=0
zsh_defer() {
  local fn cmd
  fn="_zsh_defer_$((++_zsh_defer_count))"
  cmd=$(printf '%q ' "$@")
  eval "${fn}() { ${cmd}; add-zsh-hook -d precmd ${fn}; }"
  add-zsh-hook precmd "${fn}"
}

if [[ -n "${ZSH_PROFILE:-}" ]]; then
  zmodload zsh/zprof 2>/dev/null || true
  _zsh_profile_dump_impl() {
    local hook="$1"
    local profile_out="${ZSH_CACHE_DIR}/zprof.$$.log"
    zprof >| "${profile_out}" 2>/dev/null || true
    add-zsh-hook -d "${hook}" "_zsh_profile_dump_${hook}"
  }
  _zsh_profile_dump_precmd() { _zsh_profile_dump_impl precmd; }
  _zsh_profile_dump_zshexit() { _zsh_profile_dump_impl zshexit; }
  add-zsh-hook precmd _zsh_profile_dump_precmd
  add-zsh-hook zshexit _zsh_profile_dump_zshexit
fi

plugins=(git)

source "$ZSH/oh-my-zsh.sh"

promptinit
prompt pure

if [[ -r "$ZSH/plugins/colored-man-pages/colored-man-pages.plugin.zsh" ]]; then
  zsh_defer source "$ZSH/plugins/colored-man-pages/colored-man-pages.plugin.zsh"
fi

if [[ -r "$ZSH/plugins/colorize/colorize.plugin.zsh" ]]; then
  zsh_defer source "$ZSH/plugins/colorize/colorize.plugin.zsh"
fi

if [[ -r "$ZSH/plugins/history-substring-search/history-substring-search.plugin.zsh" ]]; then
  zsh_defer source "$ZSH/plugins/history-substring-search/history-substring-search.plugin.zsh"
fi

if [[ -r "$ZSH_CUSTOM/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  zsh_defer source "$ZSH_CUSTOM/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

if [[ -r "$ZSH_CUSTOM/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh" ]]; then
  zsh_defer source "$ZSH_CUSTOM/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh"
elif [[ -r "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh" ]]; then
  zsh_defer source "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh"
fi

if command -v autojump >/dev/null 2>&1; then
  if [[ -r "$ZSH/plugins/autojump/autojump.plugin.zsh" ]]; then
    zsh_defer source "$ZSH/plugins/autojump/autojump.plugin.zsh"
  fi
fi

if command -v direnv >/dev/null 2>&1; then
  if [[ -r "$ZSH/plugins/direnv/direnv.plugin.zsh" ]]; then
    zsh_defer source "$ZSH/plugins/direnv/direnv.plugin.zsh"
  fi
fi

# Ensure the completion cache warms up after additional completions load.
zsh_defer compinit -C -u

cdx() {
  if [[ "$1" == "update" ]]; then
    npm install -g @openai/codex@latest
  else
    codex \
      -m gpt-5-codex --yolo \
      -c model_reasoning_summary_format=experimental \
      --search "$@"
  fi
}
